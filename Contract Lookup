<script>// <![CDATA[
web3 = new Web3(new Web3.providers.HttpProvider("https://rinkeby.infura.io/bHphL2nrfi5fXAb3UvAY"));

function convertTimestamp(timestamp) {
  var d = new Date(timestamp * 1000),	// Convert the passed timestamp to milliseconds
		yyyy = d.getFullYear(),
		mm = ('0' + (d.getMonth() + 1)).slice(-2),	// Months are zero based. Add leading 0.
		dd = ('0' + d.getDate()).slice(-2),			// Add leading 0.
		hh = d.getHours(),
		h = hh,
		min = ('0' + d.getMinutes()).slice(-2),		// Add leading 0.
		ampm = 'AM',
		time;
			
	if (hh > 12) {
		h = hh - 12;
		ampm = 'PM';
	} else if (hh === 12) {
		h = 12;
		ampm = 'PM';
	} else if (hh == 0) {
		h = 12;
	}
	
	// ie: 2013-02-18, 8:35 AM	
	time = yyyy + '-' + mm + '-' + dd + ', ' + h + ':' + min + ' ' + ampm;
		
	return time;
}

function HexToAscii(str)
{
	hex = str;
	hex = hex.match(/[0-9A-Fa-f]{2}/g);
	len = hex.length;
	if( len==0 ) return;
	txt='';
	for(i=0; i<len; i++)
	{
		h = hex[i];
		code = parseInt(h,16);
		t = String.fromCharCode(code);
		txt += t;
	}
	return txt;
}

function SearchBlockchainforSmartVows() {
        var GET = {};
        var query = window.location.search.substring(1).split("&");
        for (var i = 0, max = query.length; i < max; i++)
	{
		if (query[i] === "") // check for trailing & with no param
		continue;
		var param = query[i].split("=");
		GET[decodeURIComponent(param[0])] = decodeURIComponent(param[1] || "");
	}
	var account = GET.account;

var abi = [ { "constant": true, "inputs": [], "name": "witnesses", "outputs": [ { "name": "", "type": "string" } ], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": true, "inputs": [], "name": "marriageLicenceImageIPFShash", "outputs": [ { "name": "", "type": "bytes" } ], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": true, "inputs": [], "name": "officiant", "outputs": [ { "name": "", "type": "string" } ], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": true, "inputs": [], "name": "prenupAgreement", "outputs": [ { "name": "", "type": "string" } ], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": true, "inputs": [], "name": "marriageDate", "outputs": [ { "name": "", "type": "string" } ], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": true, "inputs": [], "name": "partner2_vows", "outputs": [ { "name": "", "type": "string" } ], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": true, "inputs": [], "name": "partner2_voted_update_prenup", "outputs": [ { "name": "", "type": "bool" } ], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": true, "inputs": [], "name": "partner2_voted_update_marriage_status", "outputs": [ { "name": "", "type": "bool" } ], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": true, "inputs": [], "name": "partner2_signed", "outputs": [ { "name": "", "type": "bool" } ], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": true, "inputs": [], "name": "partner2_name", "outputs": [ { "name": "", "type": "string" } ], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": true, "inputs": [], "name": "maritalStatus", "outputs": [ { "name": "", "type": "string" } ], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": true, "inputs": [], "name": "partner2_address", "outputs": [ { "name": "", "type": "address" } ], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": true, "inputs": [], "name": "location", "outputs": [ { "name": "", "type": "string" } ], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": true, "inputs": [], "name": "partner1_will", "outputs": [ { "name": "", "type": "string" } ], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": true, "inputs": [ { "name": "", "type": "uint256" } ], "name": "lifeEvents", "outputs": [ { "name": "date", "type": "uint256" }, { "name": "name", "type": "string" }, { "name": "description", "type": "string" }, { "name": "mesg", "type": "string" } ], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": true, "inputs": [], "name": "owner", "outputs": [ { "name": "", "type": "address" } ], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": true, "inputs": [], "name": "is_signed", "outputs": [ { "name": "", "type": "bool" } ], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": true, "inputs": [], "name": "partner1_voted_update_prenup", "outputs": [ { "name": "", "type": "bool" } ], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": true, "inputs": [], "name": "getUsersCount", "outputs": [ { "name": "", "type": "uint256" } ], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": true, "inputs": [], "name": "partner1_voted_update_marriage_status", "outputs": [ { "name": "", "type": "bool" } ], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": true, "inputs": [ { "name": "index", "type": "uint256" } ], "name": "getUser", "outputs": [ { "name": "", "type": "string" }, { "name": "", "type": "string" }, { "name": "", "type": "string" } ], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": true, "inputs": [], "name": "partner1_signed", "outputs": [ { "name": "", "type": "bool" } ], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": true, "inputs": [], "name": "eventcount", "outputs": [ { "name": "", "type": "uint256" } ], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": true, "inputs": [], "name": "partner1_name", "outputs": [ { "name": "", "type": "string" } ], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": true, "inputs": [], "name": "coupleImageIPFShash", "outputs": [ { "name": "", "type": "bytes" } ], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": true, "inputs": [], "name": "partner1_address", "outputs": [ { "name": "", "type": "address" } ], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": true, "inputs": [], "name": "partner2_will", "outputs": [ { "name": "", "type": "string" } ], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": true, "inputs": [], "name": "partner1_vows", "outputs": [ { "name": "", "type": "string" } ], "payable": false, "stateMutability": "view", "type": "function" }, { "constant": false, "inputs": [ { "name": "_partner2_vows", "type": "string" } ], "name": "updatePartner2_vows", "outputs": [], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "inputs": [ { "name": "_partner1", "type": "string" }, { "name": "_partner1_address", "type": "address" }, { "name": "_partner2", "type": "string" }, { "name": "_partner2_address", "type": "address" }, { "name": "_marriageDate", "type": "string" }, { "name": "_maritalStatus", "type": "string" }, { "name": "_officiant", "type": "string" }, { "name": "_witnesses", "type": "string" }, { "name": "_location", "type": "string" }, { "name": "_coupleImageIPFShash", "type": "bytes" }, { "name": "_marriageLicenceImageIPFShash", "type": "bytes" } ], "payable": false, "stateMutability": "nonpayable", "type": "constructor" }, { "constant": false, "inputs": [ { "name": "_partner2_will", "type": "string" } ], "name": "updatePartner2_will", "outputs": [], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "constant": false, "inputs": [], "name": "voteToUpdatePrenup", "outputs": [], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "constant": false, "inputs": [ { "name": "_prenupAgreement", "type": "string" } ], "name": "updatePrenup", "outputs": [], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "constant": false, "inputs": [ { "name": "newOwner", "type": "address" } ], "name": "transferOwnership", "outputs": [], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "constant": false, "inputs": [ { "name": "_maritalStatus", "type": "string" } ], "name": "updateMaritalStatus", "outputs": [], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "anonymous": false, "inputs": [ { "indexed": false, "name": "name", "type": "string" }, { "indexed": false, "name": "description", "type": "string" }, { "indexed": false, "name": "mesg", "type": "string" } ], "name": "LifeEvent", "type": "event" }, { "anonymous": false, "inputs": [ { "indexed": true, "name": "previousOwner", "type": "address" }, { "indexed": true, "name": "newOwner", "type": "address" } ], "name": "OwnershipTransferred", "type": "event" }, { "constant": false, "inputs": [ { "name": "name", "type": "string" }, { "name": "description", "type": "string" }, { "name": "mesg", "type": "string" } ], "name": "addLifeEvent", "outputs": [], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "constant": false, "inputs": [], "name": "voteToUpdateMaritalStatus", "outputs": [], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "constant": false, "inputs": [ { "name": "_marriageLicenceImageIPFShash", "type": "bytes" } ], "name": "updateMarriageLicenceImageIPFShash", "outputs": [], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "constant": false, "inputs": [ { "name": "_coupleImageIPFShash", "type": "bytes" } ], "name": "updateCoupleImageIPFShash", "outputs": [], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "constant": false, "inputs": [], "name": "sign", "outputs": [], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "constant": false, "inputs": [ { "name": "_partner1_will", "type": "string" } ], "name": "updatePartner1_will", "outputs": [], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "constant": false, "inputs": [ { "name": "_partner1_vows", "type": "string" } ], "name": "updatePartner1_vows", "outputs": [], "payable": false, "stateMutability": "nonpayable", "type": "function" } ]

;

var MyContract = web3.eth.contract(abi);

// initiate contract for an address
var myContractInstance = MyContract .at(account);

// call constant function (synchronous way)
var owner = myContractInstance .owner.call();
var partner1_name = myContractInstance .partner1_name.call();
var partner1_address = myContractInstance .partner1_address.call();
var partner1_vows = myContractInstance .partner1_vows.call();
var partner1_signed = myContractInstance .partner1_signed.call();

var partner2_name = myContractInstance .partner2_name.call();
var partner2_address = myContractInstance .partner2_address.call();
var partner2_vows = myContractInstance .partner2_vows.call();
var partner2_signed = myContractInstance .partner2_signed.call();
var is_signed = myContractInstance .is_signed.call();

var partner1_VotedToChangeMarriageStatus = myContractInstance .partner1_voted_update_marriage_status.call();
var partner2_VotedToChangeMarriageStatus = myContractInstance .partner2_voted_update_marriage_status.call();

var partner1_VotedToUpdatePrenup = myContractInstance .partner1_voted_update_prenup.call();
var partner2_VotedToUpdatePrenup = myContractInstance .partner2_voted_update_prenup.call();
var partner1_will = myContractInstance .partner1_will.call();
var partner2_will = myContractInstance .partner2_will.call();
var prenupAgreement = myContractInstance .prenupAgreement.call();

var marriageDate = myContractInstance .marriageDate.call();
var maritalStatus = myContractInstance .maritalStatus.call();
var location= myContractInstance .location.call();
var witnesses= myContractInstance .witnesses.call();
var officiant= myContractInstance .officiant.call();
var marriageLicenceImageIPFShash= myContractInstance .marriageLicenceImageIPFShash.call();
marriageLicenceImageIPFShash = HexToAscii(marriageLicenceImageIPFShash);
var coupleImageIPFShash= myContractInstance .coupleImageIPFShash.call();
coupleImageIPFShash = HexToAscii(coupleImageIPFShash);

var lifeevent1 = myContractInstance.lifeEvents(0).toString();
var lifeEvent1Array = lifeevent1.split(',');
var lifeevent2 = myContractInstance.lifeEvents(1).toString();
var lifeEvent2Array = lifeevent2.split(',');
var lifeevent3 = myContractInstance.lifeEvents(2).toString();
var lifeEvent3Array = lifeevent3.split(',');
//var lifeevent4 = myContractInstance.lifeEvents(3).toString();
//var lifeEvent4Array = lifeevent4.split(',');
//var lifeevent5 = myContractInstance.lifeEvents(4).toString();
//var lifeEvent5Array = lifeevent5.split(',');

document.write('<table border="3px"style="width:100%"><tr><td colspan=\"2\"><center><h1><b><br>SMART CONTRACT</b></h1></center></td></tr><tr><td colspan=\"2\"><center><h3>SmartVows Blockchain Marriage Contract</h3></center></td></tr><tr><td>Contract Address<br><input type=\"text\" readonly size=\"50\" value=\"' + account + '\"></td><td>Contract Owner<br><input type=\"text\" readonly size=\"50\" value=\"' + owner + '\"></td></tr><tr><td>Marriage Date<br><input type=\"text\" readonly size=\"50\" value=\"' + marriageDate + '\"></td><td>Marriage Status<br><input type=\"text\" readonly size=\"50\" value=\"' + maritalStatus  + '\"></td></tr><tr><td>Partner 1 Name<br><input type=\"text\" readonly size=\"50\" value=\"' + partner1_name + '\"></td><td>Partner 2 Name<br><input type=\"text\" readonly size=\"50\" value=\"' + partner2_name + '\"><br></td></tr><tr><td>Partner 1 Wallet Address<br><input type=\"text\" readonly size=\"50\" value=\"' + partner1_address + '\"></td><td>Partner 2 Wallet Address<br><input type=\"text\" readonly size=\"50\" value=\"' + partner2_address + '\"><br></td></tr><tr><td>Location<br><input type=\"text\" readonly size=\"50\" value=\"' + location + '\"></td><td>Officiant<br><input type=\"text\" readonly size=\"50\" value=\"' + officiant + '\"><br></td></tr><tr><td>IPFS image hash of married couple<br><input type=\"text\" readonly size=\"50\" value=\"' + coupleImageIPFShash + '\"></td><td>IPFS image hash of marriage proof<br><input type=\"text\" readonly size=\"50\" value=\"' + marriageLicenceImageIPFShash + '\"><br></td></tr><tr><td><img src=\"https://ipfs.io/ipfs/' + coupleImageIPFShash + '\" border=3></img></td><td><img src=\"https://ipfs.io/ipfs/' + marriageLicenceImageIPFShash + '\" border=3></img></td><tr><tr><td colspan="2" >Marriage Witness(es)<br><textarea readonly cols=\"100\">' + witnesses + '</textarea></td></tr><tr><td>Partner 1 Vows<br><textarea readonly rows=\"5\" cols=\"50\">' + partner1_vows + '</textarea></td><td>Partner 2 Vows<br><textarea readonly rows=\"5\" cols=\"50\">' + partner2_vows + '</textarea></td></tr><tr><td colspan="2" >Prenuptial Agreement<br><textarea readonly rows=\"10\" cols=\"100\">' + prenupAgreement + '</textarea></td></tr></tr><tr><td colspan="2" >Partner 1 Last Will & Testament<br><textarea readonly rows=\"10\" cols=\"100\">' + partner1_will + '</textarea></td><tr><td colspan="2" >Partner 2 Last Will & Testament<br><textarea readonly rows=\"10\" cols=\"100\">' + partner2_will + '</textarea></td></tr><tr><td>Partner 1 Signed<br><input type=\"text\" readonly size=\"50\" value=\"' + partner1_signed + '\"></td><td>Partner 2 Signed<br><input type=\"text\" readonly size=\"50\" value=\"' + partner2_signed + '\"><br></td></tr></table> <br><table style="width:100%"><tr><td colspan=\"4\"><center><b><br><h3>Life Events</h3></b></center></td></tr><tr><td>Date added</td><td>Name</td><td>Description</td><td>URL</td><tr><td><input type=\"text\" readonly value=\"' + convertTimestamp(lifeEvent1Array[0]) + '\"></td><td><input type=\"text\" size=\"50\" readonly value=\"' + lifeEvent1Array[1] + '\"></td><td><input type=\"text\" size=\"50\" readonly value=\"' + lifeEvent1Array[2] + '\"></td><td><input type=\"text\" size=\"50\" readonly value=\"' + lifeEvent1Array[3] + '\"></td></tr><tr><td><input type=\"text\" readonly value=\"' + convertTimestamp(lifeEvent2Array[0]) + '\"></td><td><input type=\"text\" size=\"50\" readonly value=\"' + lifeEvent2Array[1] + '\"></td><td><input type=\"text\" size=\"50\" readonly value=\"' + lifeEvent2Array[2] + '\"></td><td><input type=\"text\" size=\"50\" readonly value=\"' + lifeEvent2Array[3] + '\"></td></tr></table><table width=\"100%\"><tr><td colspan=\"2\"><center><b><br><h3>Contract Maintenance</h3></b></center></td></tr><tr><td>Partner 1 voted to update prenuptial agreement<br><input type=\"text\" readonly size=\"50\" value=\"' + partner1_VotedToUpdatePrenup + '\"></td><td>Partner 2 voted to update the prenuptial agreement<br><input type=\"text\" readonly size=\"50\" value=\"' + partner2_VotedToUpdatePrenup + '\"><br></td></tr><tr><td>Partner 1 voted to update marital status<br><input type=\"text\" readonly size=\"50\" value=\"' + partner1_VotedToChangeMarriageStatus + '\"></td><td>Partner 2 voted to update marital status<br><input type=\"text\" readonly size=\"50\" value=\"' + partner2_VotedToChangeMarriageStatus + '\"><br></td></tr></table> ');

}
// ]]></script>
<center>Ethereum Account Explorer built on INFURA</center>
<center>Sample: 0x66a9555a71abdaf8e3b26c5ac3f7f221f1eb1691</center>
<br />
<form method="GET" action="search-blockchain">Enter a SmartVows contract address: <input type="text" size="50" name="account" /><input type="submit" /></form>
<br />
<p>Latest Ethereum Block Number: <b><script>// <![CDATA[
document.write(web3.eth.blockNumber + "</b><br>");
// ]]></script></b></p>
(If the block number above is blank then you are not connected to the blockchain. Use Chrome or Firefox with Metamask plugins. Firefox on mobile with Metamask plugin is also supported.)<script>// <![CDATA[
SearchBlockchainforSmartVows();
// ]]></script>
